publishing {
    // 定义发布什么
    ext {
        isReleasedVersion = !project.version.toString().endsWith("-SNAPSHOT")
        gitRespositoryName = project.name
    }

    publications {
        mavenJava(MavenPublication) {
            groupId = "io.github.donphds"
            version = project.version
            from components.java
            pom {
                name = "${project.name}"
                url = "https://github.com/donphds/${gitRespositoryName}.git"
                description = "${project.name}"
                scm {
                    connection = "scm:git:git://github.com/donphds/${gitRespositoryName}.git"
                    developerConnection = "scm:git:ssh://github.com/donphds/${gitRespositoryName}.git"
                    url = "https://github.com/donphds/${gitRespositoryName}.git"
                }
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        id = "donphds"
                        name = "donphds"
                        email = "donphds@gmail.com"
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username findProperty("OSSRH_USER") ?: System.getenv("OSSRH_USER")
                password findProperty("OSSRH_PASSWD") ?: System.getenv("OSSRH_PASSWD")
            }
            if (!isReleasedVersion) {
                url "https://s01.oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = "sources"
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = "javadoc"
}

javadoc {
    options.addStringOption("charset", "UTF-8")
}
